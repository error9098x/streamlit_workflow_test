name: Streamlit app

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  streamlit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run ruff linter
        run: |
          pip install ruff
          ruff check .
          
      - name: Run Streamlit App tests
        uses: streamlit/streamlit-app-action@v0.0.3
        with:
          app-path: streamlit_app.py
          ruff: true
          pytest-args: -v --junit-xml=test-results.xml

      - name: Publish pytest results
        if: always()
        uses: pmeier/pytest-results-action@v0.6.0
        with:
          path: test-results.xml
          summary: true
          display-options: fEX

      - name: Post results as comment
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;

            const checkSuite = await github.checks.listSuitesForRef({
              owner,
              repo,
              ref: context.sha
            });

            const checkSuiteId = checkSuite.data.check_suites[0].id;

            const checks = await github.checks.listForSuite({
              owner,
              repo,
              check_suite_id: checkSuiteId
            });

            const annotations = await github.checks.listAnnotations({
              owner,
              repo,
              check_run_id: checks.data.check_runs[0].id
            });

            let summary = '### Test results\n\n';
            for (const annotation of annotations.data) {
              summary += `- ${annotation.path}:${annotation.start_line} - ${annotation.message}\n`;
            }

            await github.issues.createComment({
              owner,
              repo,
              issue_number,
              body: summary
            });
